<?php
/*
    ● 陣列排序算法：
        四、快速排序(Quick sort)：
            - 是對冒泡排序的一種改進。
            - 通過一趟排序將要排序的數據分割成獨立的兩個部份，其中一部份的所有數據
              都比另外一部份的所有數據都要小，然後再按此方法對兩個部份數據分別進行
              快速排序，整個排序過程可使用遞歸進行，以達到整個數據變成有序序列。
            - 假設要排序的陣列是 A[0]...A[N-1]，首先任意選取一個數據(通常選用數組
              的第一個數)作為關鍵數據，然後將所有比它小的數都放到它前面，所有比它
              大的數都放到它後面，這個過程稱為一趟快速排序。
            - 值得注意的是，快速排序不是一種穩定的排序算法，也就是說，多個相同的值
            的相對位置也許會在算法結束時產生變動。

            - 快速排序的算法：
                1.從陣列中選出一個元素(通常是第一個)，作為參照對象。
                2.定義兩個陣列，將目標陣列中剩餘的元素與參照元素挨個比較，小的放到
                  一個陣列，大的放到另一個陣列。
                3.第二步執行完之後，前後的陣列順序不確定，但是參照元素確認了自己的
                  位置。
                4.將得到的小數組陣列按照第1到第3步驟重覆操作(子問題)。
                5.回溯每個劃分到最小的陣列(一個元素) → 合併。
*/
// 陣列的排序算法：快速排序
$arr = array(5,7,4);

# 1.創建一個遞歸函數
function quick_sort($arr){

    # 1-1.創建出口
    $len = count($arr);
    if($len <= 1){
        return $arr;
    }

    # 2.創建兩個空陣列
    $left = $right = array();

    # 3.與參照元素進行比較
    for($i = 1; $i < $len; $i++){
        # 3-1.比參照元素小的放入$left
        if($arr[$i] < $arr[0]){
            $left[] = $arr[$i];
        }else{
            # 3-2.比參照元素大的放入$right
            $right[] = $arr[$i];
        }
    }

    # 4.$left和$right陣列元素還沒有排序好，所以要遞歸回調再做比較
    $left = quick_sort($left);
    print_r($left);

    echo "<br />";

    $right = quick_sort($right);
    print_r($right);

    echo "<br />";

    # 5.合併三個"陣列"
    return array_merge($left,(array)$arr[0],$right);

}

echo "<pre>";

print_r(quick_sort($arr));
