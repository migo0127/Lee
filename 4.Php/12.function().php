<?php
    /*
        一、函數的基本概念：
            - function()是一種語法結構，將實現某一個功能的代碼塊(多行代碼)封
              裝到一個結構中，從而實現代碼的重覆利用(複用)。

        二、函數定義語法：
            - 函數有幾個對應的關鍵點：
                1.function 關鍵字。
                2.函數名。
                3.參數(形參和實參)。
                4.函數體。
                5.返回值。
            - 基本語法：
                function 函數名([參數]){
                    // 函數體;
                    // 返回值 return 結果;
                }

            - 定義函數的目的：
                - 是為了實現代碼的重覆利用，一個功能一個函數(簡單明瞭)。

            - 函數的使用：
                - 通過訪問函數的名字+(); 來實現。
                - 若當函數在定義的過程中有參數，那麼在調用時就必須傳入對應的參數。

            - 函數執行的內存分析：
                1.讀取代碼進入的到內存的代碼段 (編譯：將代碼編程字節馬存到內存)。
                2.根據代碼逐行執行。

                ※ 以上原因可知：編譯和執行是分開的 (先編譯後執行)。

            - 函數的執行流程：
                - 例：
                    function add($a,$b){
                        echo $a + $b;
                    }

                    $num1 = 10;

                    add($num,20);

                    1.系統調用add函數：去內存中尋找是否有add函數 → 有。
                    2.系統會在棧區開闢內存空間運行函數add。
                    3.系統會查看函數本身是否有形參 → 有，兩個。
                    4.系統會判斷調用時是否有實參 → 有，兩個。
                    5.系統默認將「實參的值」$num1,20取出並依序賦值給形參。
                    6.執行函數體：運行 $a + $b;
                    7.返回函數執行 (返回值)。

            ※ 注意：
                1.在PHP中允許實參多於形參(個數)：函數內部不會使用而已。
                2.在PHP中理論上形參個數沒有限制(實際開發不會用太多)。
                3.實參不能少於形參個數。

        三、默認值：
            - default value，指的是形參的默認值，在函數定義的時候，就給形參進行
              一個初始賦值，如果實際調用傳入的參數(實參)沒有提供，那麼形參就會使
              用定義時的值來進入函數內部參與運算。
            - 通常默認值是用在一些一定會有某個數據參與，但是可以通常是某個我們知
              道的值。
            - 例：
                function join($num3 = 0, $num4 = 0){
                    echo $num1 - $num2;
                }

                $num3 = 20;
                join(num20); # 20-0=20

            ※ 當前的$num3是形參，在編譯時不執行，即便執行也是在
               add2函數內部，不會與外部的$num3變量沖突。

            ※ 傳入的實參可以是變量或者其他有值的表達式(變量、常
               量、運算符計算結果、三目運算符...等)。
    */

    // 函數的默認值：
    function add2($num3 = 0,$num4 = 0){
        echo $num3 - $num4;
    }

    $num3 = 20;
    add2($num3); # 20-0=20

    echo "<hr />";
    /*
        四、引用傳遞：
            - 實參在調用時會將值賦值給形參，那麼實際上使用的方式就是一種簡單的
              值傳遞方式，將實參(如果是變量或者常量或者其他表達式)的結果(值)取
              出來賦值給形參，形參與外部實際傳入的參數本身沒有任何關聯，只是結
              果是一樣。
            - 有時候會希望在函數內部拿到外部的數據，並且能夠在函數內部改變後，
              外部數據也跟著改變，那麼就需要明確告知函數(定義時)，函數才會在調
              用的時候去「獲取外部數據的內存地址」，此種定義形式參數的方式叫作
              引用傳值(與變量的引用傳值一樣)。

            - 基本語法：
                function 函數名(形參1,&形參2){
                    //函數體;
                    //返回值;
                }

            在調用的時候，必需給引用傳值的參數位置傳入實際參數，而且參數本身
            「必須是變量」，因為變量才指向數據的內存地址。

            - 例：
                function display($num5,&$num6){
                    $num5 = $num5 * $num5;
                    $num6 = $num6 * $num6;
                    echo $num5,"、",$num6;
                }

                $num5 = 10;
                $num6 = 5;
                echo $num5,"、",$num6; # 10、5
                echo "<br /><br />";

                display($num5,$num6);  # 100、25
                echo "<br /><br />";
                echo $num5,"、",$num6;
                # 10、25，外部的變量b的值跟著函數內部的形參改變了！

            ※ 說明：
                函數在定義的時候，對應的b形參採用的是取地址(引用傳遞)的方式，
                所以在實參傳入之後，形參b取到了外部變量b的內存地址，而a取的
                是值而已，因此改變之後，a只改變了函數內部的自己，而b改變自己
                的同時也改變了外變的變量b。

            ※ 注意：
                在傳入實參時，必須傳入變量，若是變量以外的數據，會報錯。

    */
    // 引用傳遞
    function display($num5,&$num6){
        $num5 = $num5 * $num5;
        $num6 = $num6 * $num6;
        echo $num5,"、",$num6;
    }

    $num5 = 10;
    $num6 = 5;
    echo $num5,"、",$num6; # 10、5
    echo "<br /><br />";

    display($num5,$num6);  # 100、25
    echo "<br /><br />";
    echo $num5,"、",$num6; # 10、25，外部的變量b的值跟著函數內部的形參改變了！
    echo "<hr />";


    // 錯誤調用：引用傳值直接傳辱數據本身的值，而不是變量
    # display(10,5);
    # Fatal error: Only variables can be passed by reference in E:\XAMPP\htdocs\php\12.function().php on line 152

    # 以上錯誤翻譯：只有變量能夠引用傳遞。

    /*
        五、返回值：
            - return，指的是將函數實現的結果通過return關鍵字，返回給函數外部
              (函數調用處)，在PHP中所有的函數都有返回值，如果沒有明確的return
              使用，那麼系統默認返回「NULL」。
              ※ PS. JS是返回 undefined！！
            - 例：
                function test(){
                    echo __FUNCTION__;  # 輸出當前函數的名字
                }

                test(); # test
                echo "<br /><br />";
                var_dump(test());  # testNULL
                echo "<br /><br />";

            - 返回值作用：
                - 將計算結果返回給調用處。
            - 注意：
                - 函數的返回值可以是任意數據類型。

            - return關鍵字：
                1.在函數內部存在的價值：
                    - 返回當前函數的結果。
                    - 當前函數運行結束。
                2.return還可以在文件中直接使用(不在函數裡面)：
                    - 代表腳本文件將結果return後面跟的內容，轉交給包含當前文件
                      的位置(通常在系統配置文件中使用較多)，在文件中也代表終止
                      文件後面的代碼，return之後的內容不會被執行(與函數相同)。
    */

    // 沒有明確的返回值
    function test(){
        echo __FUNCTION__;  # 輸出當前函數的名字
    }

    test(); # test
    echo "<br /><br />";
    var_dump(test());  # testNULL
    echo "<br /><br />";



