<?php
/*
    ● 陣列排序算法：
        一、冒泡排序(Bubble sort)：
            - 是一種計算機科學領域較簡單的排序算法。
            - 它重覆地走訪過要排序的陣列，一次比較兩個元素，如果他們的順序錯誤，就
              把它們交換過來，走訪陣列的工作是重覆地進行，直到沒有需要在交換，也就
              是說該陣列已經排序完成。

            - 冒泡排序的算法思路：
                1.比較相鄰的元素：
                    - 如果第一個比第二個大，就交換它們兩個。
                2.對每一對相鄰元素做同樣的工作，從開始第一對到結尾的最後一對，在
                  這一點，最後的元素應該會是最大的數。
                3.針對所有的元素重覆以上的步驟，除了最後一個。
                4.持續每次對越來越少的元素重覆上面的步驟，直到沒有任何一對數字須
                  要比較。
*/
// 陣列的排序算法：冒泡排序

# 第一步：先將最大值比較後移到最右邊
$arr = array(1,3,5,2,8,7,4,6);

# 1.將最大的值先排續到最後一位
for($j = 0,$len = count($arr); $j < $len -1 ; $j++){
    // 1-1.判斷$j是否大於$j+1，若是，則兩個數交換位子
    if($arr[$j] > $arr[$j+1]){
        # 1-2.先用變數將$j的值保存
        $tep = $arr[$j];

        # 1-3.將$j+1賦值給$j，使其位子轉換
        $arr[$j] = $arr[$j+1];

        # 1-4.再將原來$j($tep)的值賦值給$j+1
        $arr[$j+1] = $tep;
    }
}

echo "<pre>";

print_r($arr);  # 此時就會將最大值先移到最右邊

echo "<hr />";

# 第二步：讓for循環重覆執行，直接不需要在比較為止
$arr1 = array(1,3,5,2,8,7,4,6);

# 2.讓$j的for循環可以重覆執行，直到不需要在比較為止
for($i = 0,$len = count($arr1); $i < $len ; $i++){
    # 1.將最大的值先排續到最後一位
    for($j = 0; $j < $len - 1 ; $j++){
        // 1-1.判斷$j是否大於$j+1，若是，則兩個數交換位子
        if($arr1[$j] > $arr1[$j+1]){
            # 1-2.先用變數將$j的值保存
            $tep = $arr1[$j];

            # 1-3.將$j+1賦值給$j，使其位子轉換
            $arr1[$j] = $arr1[$j+1];

            # 1-4.再將原來$j($tep)的值賦值給$j+1
            $arr1[$j+1] = $tep;
        }
    }
}

echo "<pre>";

print_r($arr1);  # 此時就會重覆執行$j的for循環，將完成排序

echo "<hr />";

# 第三步：優化
$arr2 = array(1,3,5,2,8,7,4,6);

# 2.讓$j的for循環可以重覆執行，直到不需要在比較為止
for($i = 0,$len = count($arr1); $i < $len ; $i++){
    # 1.將最大的值先排續到最後一位 ($j < $len)
    # 3.因為每執行一次$j循環，就會依續將大的值往右移，所以後面的排序不需要在重覆比對，故可以減少比對提高效率($j < $len - 1 - $i)
    for($j = 0; $j < $len - 1 - $i ; $j++){
        // 1-1.判斷$j是否大於$j+1，若是，則兩個數交換位子
        if($arr2[$j] > $arr2[$j+1]){
            # 1-2.先用變數將$j的值保存
            $tep = $arr2[$j];

            # 1-3.將$j+1賦值給$j，使其位子轉換
            $arr2[$j] = $arr2[$j+1];

            # 1-4.再將原來$j($tep)的值賦值給$j+1
            $arr2[$j+1] = $tep;
        }
    }
}

echo "<pre>";

print_r($arr2);  # 優化效率
