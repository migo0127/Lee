<?php
/*
     ● 陣列排序算法：
        三、插入排序(Insert sort)：
            - 插入排序的基本操作就是將一個數據差入到給予排好栩的有序數據中，從而得到
              一個新的、個數加一的有序數據，算法「適用於少量數據」的排序，是穩定的排
              序方法。
            - 插入算法是要把排序的陣列分兩部份：
                第一部份：包含了整個陣列的所有元素，但將最後一個元素除外(讓陣列多一個
                間才有插入的位置)。
                第二部份：就只包含這一個元素(即待插入的元素)。
                在第一部份排序完成後，再將這個最後元素插入到已排好序的第一部份中。
            - 插入排序的基本思想是：
                - 每步將一個待排序的紀錄，按其關鍵碼值的大小插入前面已排序的文件中適當
                  位置上，直到全部插入完為止。

            - 插入排序的算法思路：
                1.認定第一個元素已經排好序。
                2.取出第二個元素，作為待插入數據。
                3.與已經排好序的陣列的最左側元素開始進行比較。
                4.如果後面的小於前面的：說明前面已經排好序的那個陣列元素在不對的位置(向
                  右移一個)，讓新的元素填充進去(繼續向前比：高級作法)。
                5.重覆前面的步驟，直到當前元素插入到對的位置。
                6.重覆以上步驟，直到所有的陣列元素都插入到對的位置。
*/
// 陣列的排序算法：插入排序
$arr = array(4,2,6,8,1,9,7);

# 1.確認陣列的長度，且確認第一個元素(下標=>0)為已排好元素
for($i = 1, $len = count($arr) ; $i < $len ; $i++){
    # 1-2.取出第二個元素(下標=>1)，並先用變量保存
    $temp = $arr[$i];

    # 1-3.開始比較
    for($j = $i-1; $j >= 0 ; $j--){
        # 1-4.當$temp小於$j時，表示$j的值較大，位置錯誤
        if($arr[$j] > $temp){
            // 交換位置
            $arr[$j+1] = $arr[$j];
            $arr[$j] = $temp;
        }else{
            # 1-5.若$j小於$i，表示位置沒錯，不用交換位置
            break;
        }
    }
}

echo "<pre>";

print_r($arr);

echo "<hr />";

// 優化：
/*
    目前條件判斷時，只要確認$j值較大，就進行交換位置，為了效率，等全比較完後再做交換

    if($arr[$j] > $temp){
            // 交換位置
            $arr[$j+1] = $arr[$j];
            $arr[$j] = $temp;
    }

*/

$arr2 = array(4,2,6,8,1,9,7);

# 1.取的陣列長度
for($i = 1 , $len = count($arr2); $i < $len ; $i++){
    # 1-1.取出第二個元素，並用變量進行保存
    $temp2 = $arr2[$i];

    # 1-2.假設 $i 最為小，不用交換為置
    $change = false;

    # 2.進行比較
    for($j = $i-1; $j >=0 ; $j--){
        
        # 2-1.當$j > $temp ，表示$j位置錯誤
        if($arr2[$j] > $temp2){
            # 2-2.將$j的值賦值給下一個
            $arr2[$j+1] = $arr2[$j];

            # 2-3.進入此條件式，表示需要交換位置
            $change = true;
        }else{
            # 2-4.$j < $temp 不需交換位置
            break;
        }
    }

    # 3.當change為true時，表示需要交換位置
    if($change){
        # 之所以寫 $j+1，是因為for循環為 j--，到最後 j = -1，因此需要加回來
        $arr2[$j+1] = $temp2;
    }

}

echo "<pre>";

print_r($arr2);