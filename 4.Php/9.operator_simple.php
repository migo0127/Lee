<?php

    /*
        一、賦值運算符「=」：與JS一樣。
        二、算術運算符「+、-、*、/、%」：與JS一樣。
        三、比較運算符：「>、>=、<、<=、==、!=、===、!==」：與JS一樣。
            - 「==」：
                左邊與右邊的大小相同。
            -「!=」：
                左邊與右邊的大小不同。
            -「===」：
                全等於，左邊與右邊的「大小、類型」都要相同。
            -「!==」：
                不全等於，只有「大小、類型」不相同時。
    */
    $a = "123";
    $b = 123;

    var_dump($a == $b); # bool(true)
    var_dump($a === $b); #  bool(false)
    var_dump($a != $b); # bool(false)
    var_dump($a !== $b); # bool(true)


    echo "<hr />";
    /*
        四、邏輯運算符：
            「&&」：邏輯與，找false。
            「||」：邏輯或，找true。
            「!」：邏輯非，反轉。
                ※ 「&&」與「||」：
                    - 又稱為短路運算。
                    - 如果第一個表達式結果已經滿足條件，那麼就不會運行邏輯運算符後
                      面的表達式。
                    - 因此在輸寫代碼時，盡量將出現概率最高的，能夠直接判斷出結果的
                      表達式放到第一位。

        五、連接運算符：
            - 是PHP中將多個字符串拼街的一種符號。
            - 分兩種方式：
                1.「.」：將兩個字符串連接到一起。
                    - 例：
                        $c = "hello";
                        $d = 123;

                        echo $c.$d;  # hello123
                        var_dump(gettype($c.$d));
                        # string(6) "string"

                2.「.=」：
                    - 複合運算，將左邊的內容與右邊的內容連接起來，然後重新賦值
                      給左邊變量。
                    - a .= b; 等於 a = a.b;
                    - 例：
                        $d .= $c;
                        echo $d; # 123hello
                        echo gettype($d);  # string

    */
    // 連接運算符：.
    $c = "hello";
    $d = 123;

    echo $c.$d; # hello123
    echo "<br /><br />";
    var_dump(gettype($c.$d)); # string(6) "string"
    echo "<br /><br />";


    $d .= $c;
    echo $d; # 123hello
    echo "<br /><br />";
    echo gettype($d);  # string


    echo "<hr />";

    /*
       六、錯誤抑制符：
        - 在PHP中有一些錯誤可以提其預知，但是這些錯誤可以無法避免，但又不希望報
          錯給用戶看，可以使用錯誤抑制符處理。
        - 語法：
            @：在可能出現的表達式前使用@符號即可。
            @(表達式);
        - 例：


    */
    // 錯誤抑制符
    $e = 12;
    $f = 0;

    @($e/$f);
    // ($e/$f);
    # Warning: Division by zero in E:\XAMPP\htdocs\php\9.operator_simple.php on line 94

    /*
        七、三目運算符：
            - 有三個表達式參與的運算(簡單的分支結構縮寫)。
            - 語法：
                表達式1 ? 表達式2 : 表達式3;

            ※ 與JS相同，若表達式本身比較複雜，建議使用括號包起來。
                表達式1 ? (表達式2 ? 表達式4 : 表達式5 ) : (表達式3 ? 表達式6 : 表達式7);

        八、自操作運算符：
            「++」：$a++、++$a，與JS一樣。
            「--」：$a--、--$a，與JS一樣。
                - 衍生：
                    「+=、-=、*=、/=、%=」都與JS一樣。
    */
